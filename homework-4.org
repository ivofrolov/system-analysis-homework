* Как есть
#+BEGIN_HTML
<img src="diagrams/homework-0/components.svg">
#+END_HTML

* Как надо
[[file:diagrams/homework-4/services-to-be.png]]

Матчинг воркера под заказ, как изолированный контекст в core поддомене подбора воркеров и самый важный компонент, выделен в отдельный сервис из монолита.

Расчеты с клиентами и воркерами выделены в отдельные сервисы для обеспечения строгих требований к хранению данных и неизменяемости. При этом это будут два разных сервиса ввиду того, что связаны они с разными контекстами (заказов клиентов и задач воркеров), то есть бизнес логика в них может начать развиваться уникальным образом.

Контроль качества отделен от заказов из-за отличий в характеристиках.

Нотификации, как технические шаги в рамках изолированных контекстов, перенесены в свои сервисы для устранения скрытой связанности.

Также был реализован сервис тотализатора в поддомене мотивации менеджеров.

Перед выделением новых сервисов необходимо будет реализовать рассылку событий из монолита и сервиса найма, потому что предполагаются в основном асинхронный стиль коммуникаций.

** Instability

Сервис матчинга получился стабильным (instability=0.5), что хорошо, так как это самый важный сервис.

Сервис тестирования и найма (instability=1) и сервис исполнения заказов (instability=1) самые нестабильные из-за того, что более "низкоуровненвые" сервисы расчетов, контроля качества и тотализатора стабильны (instability=0), что контринтуитивно. Поэтому следует посмотреть на это с точки зрения зависимостей компонентов, что "перевернет" направления async стрелок и все встанет на свои места.

* План
** Когда свободных людей и ресурсов нет, а опыт и (или) инфраструктура есть
1. Добавляем публикацию событий в сервис тестирования и найма.
2. Выносим матчинг, используя паттерн Change Data Capture.
3. Добавляем публикацию событий заказов в монолит.
4. Выносим расчеты с клиентами и воркерами, используя паттерн Change Data Capture, потому что изменился вид коммуникаций.
5. Выносим контроль качества, используя паттерн Change Data Capture, потому что изменился вид коммуникаций.
6. Изолируем модули заказов клиентов, сборки расходников и задач воркеров в монолите.
7. Внедряем нотификации в монолит.
8. Делаем тотализатор.

** Когда есть свободные люди и ресурсы, но нет опыта и (или) инфраструктуры
1. Добавляем публикацию событий заказов в монолит и делаем отдельный сервис тотализатора.
2. Выносим контроль качества, используя паттерн Change Data Capture, потому что изменился вид коммуникаций.
3. Добавляем публикацию событий в сервис тестирования и найма.
4. Выносим расчеты с воркерами, используя паттерн Change Data Capture, потому что изменился вид коммуникаций.
5. Выносим расчеты с клиентами, используя паттерн Change Data Capture, потому что изменился вид коммуникаций.
6. Выносим матчинг, используя паттерн Change Data Capture.
7. Изолируем модули заказов клиентов, сборки расходников и задач воркеров в монолите.
8. Внедряем нотификации в монолит.
