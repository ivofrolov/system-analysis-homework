* Стейкхолдеры

|         | Informed       | Commited       | Authorized | Representative |
|---------+----------------+----------------+------------+----------------|
|         | Топ-менеджмент | Топ-менеджмент |            | Топ-менеджмент |
|         | Менеджеры      |                |            | Менеджеры      |
|         | Финотдел       |                | Финотдел   | Финотдел       |
|         |                | Разработчики   |            | Разработчики   |
|         |                | Админы         |            | Админы         |
|         | Юристы         |                | Юристы     | Юристы         |
| Клиенты |                |                |            |                |

Еще забыли
- воркеров, которые, как и клиенты, не входят ни в одну группу,
- сотрудников склада, решения которых будут редко меняться.

* Характеристики изолированных контекстов поддоменов

Общие характеристики:
- agility
- deployability
- testability
- modifiability
- maintainability
- security (консерн топ-менеджмента и юристов, complience)
- reliability (консерн разработчиков и админов)

** Подбор воркеров (core поддомен)
- modifiability (специфика поддомена)
- maintainability (специфика поддомена)
- high model complexity (специфика поддомена)

*** Тестирование и найм
- elasticity (риск DDOS)
- modifiability (консерн топ-менеджмента)
- modularity (консерн топ-менеджмента)

*** Матчинг воркера под заказ

** Обеспечение работы воркеров (supporting поддомен)

*** Трекер задач воркеров

*** Сборка расходников

*** Управление расчетами с воркерами
- modifiability (консерн бухгалтерии)
- modularity (консерн бухгалтерии)
- consistency (консерн бухгалтерии)

** Продажа услуг клиентам (supporting поддомен)

*** Заказы клиентов
- scalability (популярность проекта)
- reliability (консерн клиентов)

*** Контроль качества

*** Заказ печенья

*** Управление расчетами с клиентами
- consistency (консерн бухгалтерии)

** Мотивация менеджеров (supporting поддомен)

*** Тотализатор
- security (консерн менеджеров)

* Архитектурный стиль

Выбран распределенный стиль на основе микросервисов. Все готовые решения должны быть коробочными, потому что нам критично держать данные у себя.

Во всех сервисах, кроме матчинга и найма, использовать реляционную СУБД. Для матчинга больше подходит колоночная из-за большого объема обрабатываемых данных.

** Сервис тестирования (скоринга кандидатов)

*Microkernel*, потому что требуется проверять большое количество гипотез.

** Сервис приема заявок от кандидатов

К нему предъявляется требование к способности выдержать нагрузку из-за высокого потока заявок, поэтому поридется его выделить. Можно использовать готовое решение.

** Сервис матчинга воркера

*Pipeline*, потому что алгоритм матчинга похож на map-reduce.

** Трекер задач воркеров

Можно адаптировать готовое решение или разработать несложный *layered* монолит, функционал минимальный и не специфичный.

** Сервис управления расчетами (билинг)

Контексты управления расчетами с воркерами и клиентами надо объединить в один сервис из-за одинаковых ограничений к ним (финансовый compliencе). Использовать *модульный монолит* с учетом предполагаемой интеграции с различными внешними системами расчета.

** Сервис заказов клиентов

Можно адаптировать готовое решение, сильно специфических требований нет. Но это решение должно уметь выдерживать высокую нагрузку (наш сервис популярен) и поддерживать возможность интеграции с собственными сервисами. Или разработать собственное на *layered* архитектуре.

** Сервис контроль качества

Несложный *layered* монолит.

** Сервис тотализатора

Несложный *layered* монолит.

** Внешние сервисы

- Заказ печенья
- Золотая шляпа

* Коммуникации

Выбраны *синхронные request-response* коммуникации из-за большого количества применяемых готовых решений и простых в разработке сервисов.

* ADR
** 001 - изолировать тотализатор
*** Контекст
Для повышения мотивации менеджеров решено использовать тотализатор заказов клиентов. При этом нельзя нарушать требования законодательства и распространять тотализатор кому-либо кроме менеджеров.

*** Решение
Согласно требованиям стейкхолдеров и ограничениям необходимо изолировать тотализатор в отдельный сервис с собственной базой данных. Никакие финансовые данные (движения денежных средств) не должны ни хранится в БД, ни передаваться в другие сервисы.

Также необходимо ограничить использование сервиса определенным кругом лиц.

* Фитнес функции

- покрытие тестами 100%
- все контракты запросов/ответов сервисов совместимы, периодическая проверка по реестру схем и связям сервисов
- максимальный TTM в сервисе тестирования (скоринга) воркеров 1 неделя
- максимальный TTM в остальных сервисах 1 месяц
- сервис заявок кандидатов и заказов клиентов выдерживает нагрузочные тесты
- баланс в сервисах расчетов с воркерами и клиентами сходится
- к тотализатору имеют доступ только менеджеры с согласования руководителя
- в БД и коде тотализатора нет критичных данных, периодическая проверка командой ИБ
